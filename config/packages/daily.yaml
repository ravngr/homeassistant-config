---

pkg_daily:
  automation:
    - id: "112b31ff-24e7-4cdf-9566-57c2ab6c015d"
      alias: "pkg_daily_update"
      description: "Update daily datetimes"
      mode: single
      trigger:
        - platform: time
          at: input_datetime.daily_maintinance
          id: time
        - platform: homeassistant
          event: start
          id: start
      condition:
        - condition: or
          conditions:
            - condition: trigger
              id: time
            - condition: and
              conditions:
                - condition: trigger
                  id: start
                - condition: template
                  value_template: >
                    {{
                      (state_attr(this.entity_id, 'last_triggered') is none) or
                      (
                        (
                          now() - state_attr(this.entity_id, 'last_triggered')
                        ).total_seconds() / 3600 >= (60 * 60 * 23)
                      )
                    }}
      action:
        - service: input_datetime.set_datetime
          data:
            timestamp: >-
              {%- set rise_dt = state_attr('sun.sun', 'next_rising') | as_datetime -%}
              {%- set earliest_dt = rise_dt.replace(hour=7, minute=0, second=0) -%}
              {%- set start_dt =
                (
                  rise_dt +
                  timedelta(
                    minutes=range(-3, 4) | random,
                    seconds=range(-59, 60) | random
                  )
                ).timestamp()
              -%}
              {%- if start_dt < earliest_dt -%}
              {{ earliest_dt.timestamp() }}
              {%- else -%}
              {{ start_dt.timestamp() }}
              {%- endif -%}
          target:
            entity_id: input_datetime.daily_begin
        - service: input_datetime.set_datetime
          data:
            timestamp: >-
              {%- set set_dt = state_attr('sun.sun', 'next_setting') | as_datetime -%}
              {%- set latest_dt = rise_dt.replace(hour=19, minute=30, second=0) -%}
              {%- set end_dt =
                (
                  set_dt +
                  timedelta(
                    minutes=range(-3, 4) | random,
                    seconds=range(-59, 60) | random
                  )
                ).timestamp()
              -%}
              {%- if end_dt > latest_dt -%}
              {{ latest_dt.timestamp() }}
              {%- else -%}
              {{ start_dt.timestamp() }}
              {%- endif -%}
          target:
            entity_id: input_datetime.daily_end
        - service: input_datetime.set_datetime
          data:
            timestamp: >
              {{
                (
                  today_at('21:00') +
                  timedelta(
                    minutes=range(239) | random,
                    seconds=range(60) | random
                  )
                ).timestamp()
              }}
          target:
            entity_id: input_datetime.daily_late

  input_datetime:
    daily_maintinance:
      name: "Maintinance Time"
      icon: "mdi:clipboard-text-clock-outline"
      has_date: false
      has_time: true

    daily_begin:
      name: "Daytime start"
      icon: "mdi:weather-sunset-up"
      has_date: false
      has_time: true

    daily_end:
      name: "Daytime end"
      icon: "mdi:weather-sunset-down"
      has_date: false
      has_time: true

    daily_late:
      name: "Day over"
      icon: "mdi:weather-night"
      has_date: false
      has_time: true


  homeassistant:
    customize:
      automation.pkg_daily_update:
        friendly_name: "[pkg_daily] Update datetimes"
