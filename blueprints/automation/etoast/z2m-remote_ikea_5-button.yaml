---

blueprint:
  name: "[z2m-remote] Handle IKEA round Remote"
  description: "Run actions in response to IKEA 5-button round remote events"
  domain: automation
  input:
    topic_remote_action:
      name: "Remote action topic"
      description: "MQTT topic to listen to for actions, usually `zigbee2mqtt/<device name>/action`"
      selector:
        text:


    action_middle_click:
      name: Middle - Click
      description: "Actions run on single press middle button"
      <<: &action_common
        default: []
        selector:
          action: {}

    action_middle_hold:
      name: Middle - Hold
      description: "Actions run when middle button held (click action still runs)"
      <<: *action_common


    action_up_click:
      name: Up - Click
      <<: *action_common

    action_up_hold:
      name: Up - Hold
      <<: *action_common

    action_up_release:
      name: Up - Release
      <<: *action_common


    action_down_click:
      name: Down - Click
      <<: *action_common

    action_down_hold:
      name: Down - Hold
      <<: *action_common

    action_down_release:
      name: Down - Release
      <<: *action_common


    action_left_click:
      name: Left - Click
      <<: *action_common

    action_left_hold:
      name: Left - Hold
      <<: *action_common

    action_left_release:
      name: Left - Release
      <<: *action_common


    action_right_click:
      name: Right - Click
      <<: *action_common

    action_right_hold:
      name: Right - Hold
      <<: *action_common

    action_right_release:
      name: Right - Release
      <<: *action_common


mode: queued
max_exceeded: silent
trigger:
  - platform: mqtt
    topic: !input topic_remote_action
action:
  - choose:
      - conditions:
          - "{{ trigger.payload == 'arrow_left_click' }}"
        sequence: !input "action_left_click"
      - conditions:
          - "{{ trigger.payload == 'arrow_left_hold' }}"
        sequence: !input "action_left_hold"
      - conditions:
          - "{{ trigger.payload == 'arrow_left_release' }}"
        sequence: !input "action_left_release"
      - conditions:
          - "{{ trigger.payload == 'arrow_right_click' }}"
        sequence: !input "action_right_click"
      - conditions:
          - "{{ trigger.payload == 'arrow_right_hold' }}"
        sequence: !input "action_right_hold"
      - conditions:
          - "{{ trigger.payload == 'arrow_right_release' }}"
        sequence: !input "action_right_release"
      - conditions:
          - "{{ trigger.payload == 'brightness_down_click' }}"
        sequence: !input "action_down_click"
      - conditions:
          - "{{ trigger.payload == 'brightness_down_hold' }}"
        sequence: !input "action_down_hold"
      - conditions:
          - "{{ trigger.payload == 'brightness_down_release' }}"
        sequence: !input "action_down_release"
      - conditions:
          - "{{ trigger.payload == 'brightness_up_click' }}"
        sequence: !input "action_up_click"
      - conditions:
          - "{{ trigger.payload == 'brightness_up_hold' }}"
        sequence: !input "action_up_hold"
      - conditions:
          - "{{ trigger.payload == 'brightness_up_release' }}"
        sequence: !input "action_up_release"
      - conditions:
          - "{{ trigger.payload == 'toggle' }}"
        sequence: !input "action_middle_click"
      - conditions:
          - "{{ trigger.payload == 'toggle_hold' }}"
        sequence: !input "action_middle_hold"
